version: 2
jobs:

  unit_tests:
    docker:
      - image: perl:latest
        environment:
        - PERL5LIB: "."
        - MYSQL_HOME: "/root/project/.circleci"
      - image: circleci/mysql:latest
    parallelism: 3

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential zip dnsutils bsdmainutils mysql-client git
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run: cpanm --notest REHSACK/List-MoreUtils-XS-0.425_001.tar.gz
      - run: cpanm --installdeps --notest .
      - save_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
          paths:
            - "/usr/local/lib/perl5/site_perl"
      - run:
          name: Wait for database
          command: |
            while ! echo -n > /dev/tcp/127.0.0.1/3306; do
              sleep 1
              echo -n .
            done
      - run:
          name: Create database(s)
          command: |
            mysql -e "create database seccubus"
            mysql -e "create database seccubus_create"
            mysql -e "create database seccubus_upgrade"
      - run: if [ -e .git/shallow ]; then git fetch --unshallow; fi
      - run:
          name: Unit test
          command: circleci tests glob t/* | circleci tests split --split-by=timings --timings-type=filename | xargs -n 1 prove

  build:
    docker:
      - image: perl:latest
        environment:
        - PERL5LIB: "."

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential zip dnsutils bsdmainutils mysql-client default-jre
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run:
          name: Build
          command: ./build_all
      - store_artifacts:
          path: /root/project/build/Seccubus*.tar.gz

  build_deb:
    docker:
      - image: debian:9
        environment:
        - PERL5LIB: "."

    steps:
      - run: apt-get update; apt-get install -y git ssh
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential debhelper default-jre-headless git debsigs
      - run:
          name: Build
          command: deb/makedeb.sh
      - save_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
          paths:
            - "/root/project/build"
#      - store_artifacts:
#          path: /root/project/build

  debian8_test:
    docker:
      - image: debian:8

    steps:
      - run: debconf-set-selections <<< 'mysql-server mysql-server/root_password password your_password'
      - run: debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password your_password'
      - run: apt-get update; apt-get install -y ca-certificates git ssh
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - restore_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
      - run:
          name: Install package (shoud fail)
          shell: bash -ex
          command: if dpkg -i /root/project/build/*.deb; then echo "NOT ok"; exit 99; else echo "OK" ; fi
      - run:
          name: Install failed packages (shoud work)
          command: apt-get install -f -y
      - run:
          name: Seccubus should be running on port 8443
          command: echo -n >/dev/tcp/localhost/8443

  debian9_test:
    docker:
      - image: debian:9

    steps:
      - run: apt-get update; apt-get install -y ca-certificates git ssh
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - restore_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
      - run:
          name: Install package (shoud fail)
          shell: bash -ex
          command: if dpkg -i /root/project/build/*.deb; then echo "NOT ok"; exit 99; else echo "OK" ; fi
      - run:
          name: Install failed packages (shoud work)
          command: apt-get install -f -y
      - run:
          name: Seccubus should be running on port 8443
          command: echo -n >/dev/tcp/localhost/8443

  kali_test:
    docker:
      - image: kalilinux/kali-linux-docker:latest

    steps:
      - run: apt-get update; apt-get install -y ca-certificates git ssh
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - restore_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
      - run:
          name: Install package (shoud fail)
          shell: bash -ex
          command: if dpkg -i /root/project/build/*.deb; then echo "NOT ok"; exit 99; else echo "OK" ; fi
      - run:
          name: Install failed packages (shoud work)
          command: apt-get install -f -y
      - run:
          name: Seccubus should be running on port 8443
          command: echo -n >/dev/tcp/localhost/8443

  ubuntu14_test:
    docker:
      - image: ubuntu:14.04

    steps:
      - run: debconf-set-selections <<< 'mysql-server mysql-server/root_password password your_password'
      - run: debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password your_password'
      - run: apt-get update; apt-get install -y ca-certificates git ssh
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - restore_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
      - run:
          name: Install package (shoud fail)
          shell: bash -ex
          command: if dpkg -i /root/project/build/*.deb; then echo "NOT ok"; exit 99; else echo "OK" ; fi
      - run:
          name: Install failed packages (shoud work)
          command: apt-get install -f -y
      - run:
          name: Seccubus should be running on port 8443
          command: echo -n >/dev/tcp/localhost/8443

  ubuntu16_test:
    docker:
      - image: ubuntu:16.04

    steps:
      - run: apt-get update; apt-get install -y ca-certificates git ssh
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - restore_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
      - run:
          name: Install package (shoud fail)
          shell: bash -ex
          command: if dpkg -i /root/project/build/*.deb; then echo "NOT ok"; exit 99; else echo "OK" ; fi
      - run:
          name: Install failed packages (shoud work)
          command: apt-get install -f -y
      - run:
          name: Seccubus should be running on port 8443
          command: echo -n >/dev/tcp/localhost/8443

  ubuntu17_test:
    docker:
      - image: ubuntu:17.04

    steps:
      - run: debconf-set-selections <<< 'mysql-server mysql-server/root_password password your_password'
      - run: debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password your_password'
      - run: apt-get update; apt-get install -y ca-certificates git ssh
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - restore_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
      - run:
          name: Install package (shoud fail)
          shell: bash -ex
          command: if dpkg -i /root/project/build/*.deb; then echo "NOT ok"; exit 99; else echo "OK" ; fi
      - run:
          name: Install failed packages (shoud work)
          command: apt-get install -f -y
      - run:
          name: Seccubus should be running on port 8443
          command: echo -n >/dev/tcp/localhost/8443

  debian_ok:
    docker:
      - image: alpine
    steps:
      - run: apk update; apk add ca-certificates git
      - checkout
      - run:
          name: Generate build signature
          command: git rev-parse HEAD | tee .git-describe
      - restore_cache:
          key: deb-{{ .Branch }}-{{ checksum ".git-describe" }}
      - store_artifacts:
          path: /root/project/build
      - run: echo "All packages tested!!!"

workflows:

  version: 2

  unit_and_integration_tests:
    jobs:
      - unit_tests
      - build:
          requires:
            - unit_tests

  debian_package_building:
    jobs:
      - build_deb
      - debian9_test:
          requires:
            - build_deb
      - debian8_test:
          requires:
            - build_deb
      - ubuntu14_test:
          requires:
            - build_deb
      - ubuntu16_test:
          requires:
            - build_deb
      - ubuntu17_test:
          requires:
            - build_deb
      - kali_test:
          requires:
            - build_deb
      - debian_ok:
          requires:
            - debian8_test
            - debian9_test
            - ubuntu14_test
            - ubuntu16_test
            - ubuntu17_test
            - kali_test

