#!/bin/sh
# Copyright 2012-2018 Frank Breedijk, Scott Pack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e


if [ "$1" = "configure" ]; then

    # Set up the user

    if ! getent passwd seccubus >/dev/null; then
        adduser --system --quiet --group --home /opt/seccubus --no-create-home \
            --disabled-password seccubus --shell /bin/bash || :
        echo "export PERL5LIB=\"/opt/seccubus\"" >> ~seccubus/.profile
        chown seccubus:seccubus ~seccubus/.profile
        chmod 500 ~seccubus/.profile

    fi

    # Directories
    mkdir -p /etc/seccubus
    mkdir -p /var/log/seccubus
    mkdir -p /var/lib/seccubus
    mkdir -p /opt/seccubus

    chown -R seccubus:seccubus /etc/seccubus /var/log/seccubus /var/lib/seccubus /opt/seccubus

    # Startup Script

    cat >/etc/init.d/seccubus <<EOF
#!/bin/sh
### BEGIN INIT INFO
# Provides:          seccubus
# Required-Start:    \$local_fs \$network \$mysql
# Required-Stop:     \$local_fs \$network \$mysql
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Seccubus vulnerability management. Scan smarter, not harder
### END INIT INFO

SCRIPT=/usr/bin/hypnotoad
RUNAS=root

PIDFILE=/opt/seccubus/hypnotoad.pid
export MOJO_MODE=production
export PERL5LIB=/opt/seccubus:/opt/seccubus/lib
export HYPNOTOAD_APP="/opt/seccubus/seccubus.pl"


start() {
  if [ -f \$PIDFILE ] && kill -0 \$(cat \$PIDFILE); then
    echo 'Service already running, reloading...' >&2
    reload
    return \$?
  fi
  echo 'Starting service' >&2
  local CMD="\$SCRIPT 1>&2 & echo \\\$!"
  \$CMD
  echo 'Service started' >&2
}

stop() {
  if [ ! -f "\$PIDFILE" ] || ! kill -0 \$(cat "\$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service?' >&2
  kill -15 \$(cat "\$PIDFILE") && rm -f "\$PIDFILE"
  echo 'Service stopped' >&2
}

reload() {
  if [ -f \$PIDFILE ] && kill -0 \$(cat \$PIDFILE); then
    echo 'Reloading service' >&2
    local CMD="\$SCRIPT 1>&2 & echo \\\$!"
    \$CMD
    echo 'Service reloaded' >&2
  else
    echo 'Service seccubus is NOT running' >&2
    return 1
  fi
}

status() {
  if [ -f \$PIDFILE ] && kill -0 \$(cat \$PIDFILE); then
    echo "Seccubus is running on \$(cat \$PIDFILE)" >&2
  else
    echo "Seccubus is NOT running" >&2
  fi
}

case "\$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  reload)
    reload
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: \$0 {start|stop|reload|restart}"
esac
exit \$?
EOF

    chmod 755 /etc/init.d/seccubus
    update-rc.d seccubus defaults

    # Config file


    if [ ! -e "/etc/seccubus/config.xml" ]; then
        cat >> /etc/seccubus/config.xml <<EOF
<?xml version="1.0" standalone='yes'?>
<seccubus>
    <database>
        <engine>mysql</engine>
        <database>seccubus</database>
        <host>localhost</host>
        <port>3306</port>
        <user>seccubus</user>
        <password>seccubus</password>
    </database>
    <paths>
        <modules>/opt/seccubus/lib</modules>
        <scanners>/opt/seccubus/scanners</scanners>
        <bindir>/opt/seccubus/bin</bindir>
        <configdir>/etc/seccubus</configdir>
        <dbdir>/var/lib/seccubus</dbdir>
        <logdir>/var/log/seccubus</logdir>
    </paths>
    <smtp>
        <server>localhost</server>
        <from>seccubus@localhost</from>
    </smtp>
    <tickets>
        <url_head></url_head>
        <url_tail></url_tail>
    </tickets>
    <auth>
        <http_auth_header></http_auth_header>
        <sessionkey>SeccubusScanSmarterNotHarder</sessionkey>
        <baseurl></baseurl>
    </auth>
    <http>
        <port>8443</port>
        <cert>/etc/seccubus/seccubus.crt</cert>
        <key>/etc/seccubus/seccubus.key</key>
        <baseurl></baseurl>
    </http>
</seccubus>
EOF

    fi

    # Certificates
    if [ ! -e "/etc/seccubus/seccubus.key" ] && [ ! -e "/etc/seccubus/seccubus.crt" ] ; then
        openssl genrsa -des3 -passout pass:x12345 -out /etc/seccubus/seccubus.pass.key 4096
        openssl rsa -passin pass:x12345 -in /etc/seccubus/seccubus.pass.key -out /etc/seccubus/seccubus.key
        rm -f /etc/seccubus/seccubus.pass.key
        openssl req -new -key /etc/seccubus/seccubus.key -out /etc/seccubus/seccubus.csr \
            -subj "/CN=Seccubus"
        openssl x509 -req -days 365 -in /etc/seccubus/seccubus.csr \
            -signkey /etc/seccubus/seccubus.key -out /etc/seccubus/seccubus.crt
        rm -f /etc/seccubus/seccubus.csr

    fi

    # Start the services
    service mysql start
    service seccubus start

fi

#DEBHELPER#

