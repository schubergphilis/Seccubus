/**
 * NOTE: This file should be generated by the yeoman generator.
 * You shouldnt have to touch this file at all. Any configuration
 * for your app module should be done in the config/app.config file
 */

import {Component} from 'app/annotations/component';
import {dashCase} from 'app/lib/utils';

/**
 * Load the config that contains all the configuration for our App module.
 */
import {AppConfig} from 'app/config/app.config';

/**
 * Load our routes configuration that we can use in combination
 * with the new angular router
 */
import {RoutesConfig, defaultUrl} from 'app/config/routes.config';

import {NavbarModule} from 'app/components/navbar/navbar';

/**
 * We get the component defined in every route in our routes.config and get
 * it's Component annotation. These annotations contain the Angular modules
 * that we need to load as dependencies in our App module.
 *
 * We also update the route.component to the componentRouteName that the new
 * angular router expects as part of the route definition.
 */
var componentModuleNames = [];
for (let route of RoutesConfig) {
    let componentAnnotation = Component.getAnnotation(route.component);
    let componentModule = componentAnnotation.module;

    componentModuleNames.push(componentModule.name);
    route.component = componentAnnotation.componentRouteName;
}

if (AppConfig.debug) {
    console.log('Injecting component modules into ' + AppConfig.moduleName + ':', componentModuleNames);
}

@Component({
    moduleName: AppConfig.moduleName,
    moduleDependencies: [
        // Include all our module dependencies into our app
        ...AppConfig.moduleDependencies,

        NavbarModule.name,

        // Include all our component modules into our app
        ...componentModuleNames
    ],
    componentServices: [
        'router',
        '$scope',
        '$location'
    ]
})
export class AppComponent {
    constructor (router, $scope, $location) {
        this.scope = $scope;
        this.location = $location;
        this.router = router;
    }

    activate () {
        if (!this.router.recognizer.recognize(this.location.url())) {
            this.location.replace();
            this.location.url(defaultUrl);
        }
    }

    get router () {
        return this._router;
    }

    set router (router) {
        if (AppConfig.debug) {
            console.log('Loading routes:', JSON.stringify(RoutesConfig));
        }
        router.config(RoutesConfig);
        this.scope.routes = RoutesConfig;

        this._router = router;
    }
}

export var AppModule = Component.getAngularModule(AppComponent);

/**
 * We configure our AppModule's componentLoaderProvider to properly load our
 * components from the folder structure
 */
AppModule.config(['componentLoaderProvider', function (componentLoaderProvider) {
    // Override the default Angular New Router template mapping
    // to support our folder structure
    componentLoaderProvider.setTemplateMapping(function (name) {
        var dashName = dashCase(name);
        // E.g. /app/components/app/app.html
        return '/' + AppConfig.appFolderName  +'/' +
            AppConfig.componentFolderName + '/' +
            dashName + '/' + dashName + '.html';
    });
}]);
