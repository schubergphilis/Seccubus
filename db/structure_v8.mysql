/*
Copyright 2015 Frank Breedijk, Petr

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

-- MySQL Script generated by MySQL Workbench
-- Sun Dec 21 23:16:19 2014
-- Model: Seccubus Database Model    Version: 2.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Table `Seccubus`.`workspaces`
ALTER SCHEMA  DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci ;

-- -----------------------------------------------------
-- Table `workspaces`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `workspaces` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) NOT NULL,
  PRIMARY KEY (`id` ASC),
  UNIQUE INDEX `name` (`name` ASC),
  UNIQUE INDEX `id` (`id` ASC)
)
AUTO_INCREMENT = 100;



-- -----------------------------------------------------
-- Table `scans`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scans` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) NOT NULL,
  `scannername` CHAR(255) NOT NULL,
  `scannerparam` VARCHAR(1024) NULL DEFAULT NULL,
  `password` char(255) DEFAULT NULL,
  `targets` LONGTEXT NULL,
  `workspace_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_scans_workspaces1_idx` (`workspace_id` ASC)
);


-- -----------------------------------------------------
-- Table `finding_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `finding_status` (
  `id` INT(11) NOT NULL,
  `name` CHAR(20) NOT NULL,
  `description` CHAR(255) NOT NULL,
  PRIMARY KEY (`id`)
);


-- -----------------------------------------------------
-- Table `severity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severity` (
  `id` INT(11) NOT NULL,
  `name` CHAR(20) NOT NULL,
  `description` CHAR(255) NOT NULL,
  PRIMARY KEY (`id`)
);


-- -----------------------------------------------------
-- Table `runs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `runs` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `scan_id` INT(11) NOT NULL,
  `time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_runs_scans1_idx` (`scan_id` ASC)
);


-- -----------------------------------------------------
-- Table `findings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `findings` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `workspace_id` INT(11) NOT NULL,
  `scan_id` CHAR(20) NOT NULL,
  `host` CHAR(255) NOT NULL,
  `port` CHAR(20) NOT NULL,
  `plugin` CHAR(255) NOT NULL,
  `finding` LONGTEXT NULL DEFAULT NULL,
  `remark` LONGTEXT NULL DEFAULT NULL,
  `severity` INT(11) NOT NULL,
  `status` INT(11) NOT NULL,
  `run_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_findings_sessions1_idx` (`workspace_id` ASC),
  INDEX `fk_findings_scans1_idx` (`scan_id` ASC),
  INDEX `fk_findings_finding_status1_idx` (`status` ASC),
  INDEX `fk_findings_severity1_idx` (`severity` ASC),
  INDEX `fk_findings_runs1_idx` (`run_id` ASC),
  INDEX `host` (`host` ASC),
  INDEX `port` (`port` ASC),
  INDEX `plugin` (`plugin` ASC)
);


-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `users` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `username` CHAR(255) NULL DEFAULT NULL,
  `name` CHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username` (`username` ASC)
)
AUTO_INCREMENT = 100;


-- -----------------------------------------------------
-- Table `finding_changes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `finding_changes` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `finding_id` INT(11) NOT NULL,
  `finding` LONGTEXT NULL DEFAULT NULL,
  `remark` LONGTEXT NULL DEFAULT NULL,
  `severity` INT(11) NOT NULL,
  `status` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  `run_id` INT(11) NOT NULL,
  `time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_finding_changes_findings1_idx` (`finding_id` ASC),
  INDEX `fk_finding_changes_finding_status1_idx` (`status` ASC),
  INDEX `fk_finding_changes_severity1_idx` (`severity` ASC),
  INDEX `fk_finding_changes_users1_idx` (`user_id` ASC),
  INDEX `fk_finding_changes_runs1_idx` (`run_id` ASC)
);


-- -----------------------------------------------------
-- Table `groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `groups` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) NOT NULL,
  UNIQUE INDEX `id` (`id` ASC)
)
AUTO_INCREMENT = 100;

-- -----------------------------------------------------
-- Table `host_names`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `host_names` (
  `workspace_id` INT(11) NOT NULL,
  `ip` CHAR(16) NOT NULL,
  `name` CHAR(255) NOT NULL,
  INDEX `fk_hosts_sessions1_idx` (`workspace_id` ASC),
  PRIMARY KEY (`workspace_id`, `ip`)
);


-- -----------------------------------------------------
-- Table `issue_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `issue_status` (
  `id` INT(11) NOT NULL,
  `name` CHAR(20) NOT NULL,
  `description` CHAR(255) NOT NULL,
  PRIMARY KEY (`id`)
);


-- -----------------------------------------------------
-- Table `issues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `issues` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `session_id` INT(11) NOT NULL,
  `name` CHAR(255) NOT NULL,
  `ext_ref` CHAR(255) NULL DEFAULT NULL,
  `description` LONGTEXT NULL DEFAULT NULL,
  `severity` INT(11) NOT NULL,
  `status` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_issues_issue_status1_idx` (`status` ASC),
  INDEX `fk_issues_severity1_idx` (`severity` ASC)
);


-- -----------------------------------------------------
-- Table `issues2findings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `issues2findings` (
  `issue_id` INT(11) NOT NULL,
  `finding_id` INT(11) NOT NULL,
  `status` INT(11) NOT NULL,
  INDEX `fk_issue2finding_findings1_idx` (`finding_id` ASC),
  INDEX `fk_issue2finding_issues1_idx` (`issue_id` ASC),
  INDEX `fk_issue2finding_issue_status1_idx` (`status` ASC)
);


-- -----------------------------------------------------
-- Table `issue2finding_changes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `issue2finding_changes` (
  `issue_id` INT(11) NOT NULL,
  `finding_id` INT(11) NOT NULL,
  `status` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  `time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  INDEX `fk_issue2finding_changes_issues1_idx` (`issue_id` ASC),
  INDEX `fk_issue2finding_changes_findings1_idx` (`finding_id` ASC),
  INDEX `fk_issue2finding_changes_issue_status1_idx` (`status` ASC),
  INDEX `fk_issue2finding_changes_users1_idx` (`user_id` ASC)
);


-- -----------------------------------------------------
-- Table `issue_changes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `issue_changes` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `issue_id` INT(11) NOT NULL,
  `name` CHAR(255) NOT NULL,
  `ext_ref` CHAR(255) NULL DEFAULT NULL,
  `description` LONGTEXT NULL DEFAULT NULL,
  `severity` INT(11) NOT NULL,
  `status` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  `time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_issue_changes_issues1_idx` (`issue_id` ASC),
  INDEX `fk_issue_changes_issue_status1_idx` (`status` ASC),
  INDEX `fk_issue_changes_severity1_idx` (`severity` ASC),
  INDEX `fk_issue_changes_users1_idx` (`user_id` ASC)
);


-- -----------------------------------------------------
-- Table `rights`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `rights` (
  `workspace_id` INT(11) NOT NULL,
  `group_id` INT(11) NOT NULL,
  `allow_read` INT(1) NOT NULL,
  `allow_write` INT(1) NOT NULL,
  INDEX `fk_rights_groups1_idx` (`group_id` ASC),
  INDEX `fk_rights_sessions1_idx` (`workspace_id` ASC)
);


-- -----------------------------------------------------
-- Table `user2group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user2group` (
  `user_id` INT(11) NOT NULL,
  `group_id` INT(11) NOT NULL,
  INDEX `fk_user2group_users_idx` (`user_id` ASC),
  INDEX `fk_user2group_groups1_idx` (`group_id` ASC)
);


-- -----------------------------------------------------
-- Table `checkpoints`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checkpoints` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `workspace_id` INT(11) NOT NULL,
  `label` VARCHAR(45) NOT NULL,
  `tags` VARCHAR(45) NULL,
  `timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_checkpoints_workspaces1_idx` (`workspace_id` ASC)
);


-- -----------------------------------------------------
-- Table `config`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `config` (
  `name` VARCHAR(45) NOT NULL,
  `value` VARCHAR(255) NULL,
  PRIMARY KEY (`name`)
);


-- -----------------------------------------------------
-- Table `attachments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `attachments` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `run_id` INT(11) NOT NULL,
  `name` LONGTEXT NOT NULL,
  `description` LONGTEXT NULL,
  `data` LONGBLOB NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_attachments_runs1_idx` (`run_id` ASC)
);


-- -----------------------------------------------------
-- Table `events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`)
);


-- -----------------------------------------------------
-- Table `notifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `notifications` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `scan_id` INT(11) NOT NULL,
  `event_id` INT NOT NULL,
  `subject` VARCHAR(255) NOT NULL,
  `recipients` VARCHAR(1024) NOT NULL,
  `message` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_notifications_scans1_idx` (`scan_id` ASC),
  INDEX `fk_notifications_events1_idx` (`event_id` ASC)
);


-- -----------------------------------------------------
-- Table `assets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assets` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `workspace_id` INT(11) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `hosts` LONGTEXT NULL,
  `recipients` VARCHAR(1024) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_assets_workspaces1_idx` (`workspace_id` ASC)
);


-- -----------------------------------------------------
-- Table `asset_hosts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asset_hosts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `asset_id` INT(11) NOT NULL,
  `ip` VARCHAR(16) NOT NULL,
  `host` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_asset_hosts_assets1_idx` (`asset_id` ASC),
  INDEX `fk_asset_hosts_ip1_idx` (`ip`),
  INDEX `fk_asset_hosts_host1_idx` (`host`)
);


-- -----------------------------------------------------
-- Table `asset2scan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asset2scan` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `asset_id` INT(11) NOT NULL,
  `scan_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_asset2scan_assets1_idx` (`asset_id` ASC),
  INDEX `fk_asset2scan_scans1_idx` (`scan_id` ASC)
);

--
-- Table structure for table `customsql`
--

CREATE TABLE `customsql` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` char(255) DEFAULT NULL,
  `sql` text,
  PRIMARY KEY (`id`)
);

-- -----------------------------------------------------
-- Table `scan_schedule`
-- -----------------------------------------------------
CREATE TABLE `scan_schedule` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Row Id',
  `scan_id` INT(11) NOT NULL DEFAULT 0 COMMENT 'Scan ID',
  `status` INT(1) NOT NULL DEFAULT 0 COMMENT 'Status of schedule: 0 - not runing yet, 1 - running, 2 - complete',
  `last_run` DATETIME NULL COMMENT 'Last date run',
  PRIMARY KEY (`id`),
  INDEX `scan_id` (`scan_id` ASC),
  INDEX `last_run` (`last_run` ASC),
  INDEX `status` (`status` ASC)
);


-- -----------------------------------------------------
-- Table `schedules`
-- -----------------------------------------------------
CREATE TABLE `schedules` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Row ID',
  `schedule_id` INT(11) NOT NULL DEFAULT '0' COMMENT 'Schedule ID',
  `month` VARCHAR(2) NOT NULL DEFAULT '*' COMMENT 'Month number (1-12). If every month, then * (default)',
  `week` VARCHAR(1) NOT NULL DEFAULT '*' COMMENT 'Month week number (1-5). If every week, then * (default)',
  `wday` VARCHAR(1) NOT NULL DEFAULT '*' COMMENT 'Week day number (0-6), if every day, then * (default)',
  `day` VARCHAR(2) NOT NULL DEFAULT '*' COMMENT 'Month day number (1-31), if every day, then * (default)',
  `hour` VARCHAR(2) NOT NULL DEFAULT '*' COMMENT 'Hour number (0-23), if every hour, then * (default)',
  `min` VARCHAR(2) NOT NULL DEFAULT '*' COMMENT 'Minute number (0-59), if every minute, then * (default)',
  PRIMARY KEY (`id`),
  INDEX `schedule_id` (`schedule_id` ASC),
  INDEX `date_run` (`month` ASC, `week` ASC, `wday` ASC, `day` ASC, `hour` ASC, `min` ASC)
);



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;