#!/usr/bin/env perl
# Copyright 2017-2018 Frank Breedijk
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------
# This program creates users from the command line, usefull if you have not set
# up any users in the web gui, or if you are writing Seccubus and the GUI does
# not exist yet ;)
# ------------------------------------------------------------------------------

use strict;

if ( -e "/opt/seccubus/data/crontab" ) {
	system("ln -s /opt/seccubus/data/crontab /var/spool/cron/crontabs/seccubus")
} else {
	open(my $CRON, ">", "/var/spool/cron/crontabs/seccubus") or die "Unable to open crontab for write";
    if ( $ENV{CRON_MAIL_TO} ) {
        print $CRON "MAIL_TO=$ENV{CRON_MAIL_TO}\n";
        print "Setting MAIL_TO=$ENV{CRON_MAIL_TO} in cron\n";
        delete $ENV{CRON_MAIL_TO};
    }
    print $CRON "SHELL=/bin/bash\n";
    print "Setting SHELL=/bin/bash in cron\n";
    print $CRON "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/seccubus/bin:/opt/nikto/program:/opt/testssl.sh\n";
    print "Setting PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/seccubus/bin:/opt/nikto/program:/opt/testssl.sh in cron\n";
    print $CRON "PERL5LIB=/opt/seccubus:/opt/seccubus/lib\n";
    print "Setting PERL5LIB=/opt/seccubus:/opt/seccubus/lib in cron\n";
	foreach my $key ( sort keys %ENV ) {
		if ( $key =~ /^CRON_/ ) {
			my $line = $ENV{$key};
			chomp($line);
            if ( ! is_valid($line) ) {
                die "Cron line from variable '$key' is invalid: \n$line"
            }
			print $CRON "$line\n";
			print "Added line '$line' to cron\n";
		}
	}
	close $CRON;
}
system("chmod 0600 /var/spool/cron/crontabs/seccubus");

sub is_valid() {
    my $line = shift;

    # Remove comments
    $line =~ s/\#.*$//;

    # Is it a variable?
    if ( $line =~ /^\w+\=.*$/ ) {
        return 1;
    } elsif ( $line =~ /^(\d+|\*)(\/\d+)?\s+(\d+|\*)\s+(\d+|\*)\s+(\d+|\*)\s+(\d+|\*)\s+.*$/ ) {
        # Time line
        return 1;
    }
    return 0;
}
